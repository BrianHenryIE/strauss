<?php

namespace BrianHenryIE\Strauss\Pipeline\Autoload;

use BrianHenryIE\Strauss\Config\AutoloadConfigInterface;
use BrianHenryIE\Strauss\TestCase;
use Mockery;
use Psr\Log\NullLogger;

/**
 * @coversDefaultClass \BrianHenryIE\Strauss\Pipeline\Autoload\VendorComposerAutoload
 */
class VendorComposerAutoloadTest extends TestCase
{
    /**
     * @covers ::__construct
     * @covers ::addAliasesFileToComposer
     * @covers ::isComposerInstalled
     * @covers ::isComposerNoDev
     * @covers ::addAliasesFileToComposerAutoload
     */
    public function test_add_aliases_file_to_true_composer(): void
    {

        $phpString = <<<'EOD'
<?php

// autoload.php @generated by Composer
if (PHP_VERSION_ID < 50600) {
    if (!headers_sent()) {
        header('HTTP/1.1 500 Internal Server Error');
    }
    $err = 'Composer 2.3.0 dropped support for autoloading on PHP <5.6 and you are running ' . PHP_VERSION . ', please upgrade PHP or use Composer 2.2 LTS via "composer self-update --2.2". Aborting.' . PHP_EOL;
    if (!ini_get('display_errors')) {
        if (PHP_SAPI === 'cli' || PHP_SAPI === 'phpdbg') {
            fwrite(STDERR, $err);
        } elseif (!headers_sent()) {
            echo $err;
        }
    }
    trigger_error($err, E_USER_ERROR);
}

require_once __DIR__ . '/composer/autoload_real.php';

return ComposerAutoloaderInitb94e268379fc65b46685517f75b1e1ba::getLoader();
EOD;

        $expected = <<<'EOD'
<?php

// autoload.php @generated by Composer
if (PHP_VERSION_ID < 50600) {
    if (!headers_sent()) {
        header('HTTP/1.1 500 Internal Server Error');
    }
    $err = 'Composer 2.3.0 dropped support for autoloading on PHP <5.6 and you are running ' . PHP_VERSION . ', please upgrade PHP or use Composer 2.2 LTS via "composer self-update --2.2". Aborting.' . PHP_EOL;
    if (!ini_get('display_errors')) {
        if (PHP_SAPI === 'cli' || PHP_SAPI === 'phpdbg') {
            fwrite(STDERR, $err);
        } elseif (!headers_sent()) {
            echo $err;
        }
    }
    trigger_error($err, E_USER_ERROR);
}

if (file_exists(__DIR__ . '/composer/autoload_aliases.php')) {
    require_once __DIR__ . '/composer/autoload_aliases.php';
}

require_once __DIR__ . '/composer/autoload_real.php';
return ComposerAutoloaderInitb94e268379fc65b46685517f75b1e1ba::getLoader();
EOD;

        $config = Mockery::mock(AutoloadConfigInterface::class);
        $config->shouldReceive('isDryRun')->andReturnFalse();
        $config->shouldReceive('getVendorDirectory')->andReturn('vendor/');
        $config->shouldReceive('getTargetDirectory')->andReturn('vendor-prefixed/');

        $fileSystem = $this->getInMemoryFileSystem();

        $sut = new VendorComposerAutoload(
            $config,
            $fileSystem,
            new NullLogger()
        );

        $fileSystem->write('vendor/autoload.php', $phpString);
        $fileSystem->write('vendor/composer/installed.json', '{"dev":true}');

        $sut->addAliasesFileToComposer();

        $result = $fileSystem->read('vendor/autoload.php');

        $this->assertEqualsRemoveBlankLinesLeadingWhitespace($expected, $result);
    }
}
